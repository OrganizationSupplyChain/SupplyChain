@model VendorResponseDetails
@{
    ViewData["Title"] = "Vendor Response";
}
<form asp-controller="ContractResponse" asp-action="AuthorizeContract" method="post" autocomplete="off">
    <div class="container-fluid">

        <!-- Page Heading -->
        <h1 class="h3 mb-2 text-gray-800">Vendor Response</h1>

        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Contract Response Details</h6>
            </div>
            <div class="card-body">
                @*<div class="table-responsive">*@

                <div class="form-group">
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="inputEmail4">Contract Number</label>
                            @Html.HiddenFor(model => model.ContractResponse.ID)
                            @Html.EditorFor(model => model.ContractDetails.CONTRACTNUMBER, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                        </div>
                        <div class="form-group col-md-6">
                            <label for="inputEmail4">PO Number</label>
                            @Html.EditorFor(model => model.ContractDetails.PONUMBER, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="inputEmail4">Contract Name</label>
                            @Html.EditorFor(model => model.ContractDetails.CONTRACTNAME, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                        <div class="form-group col-md-6">
                            <label for="inputEmail4">Quality Specification</label>
                            @Html.TextAreaFor(model => model.ContractDetails.QUALITYSPECIFICATION, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>
                    <hr />
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="inputEmail4">Vendor Name</label>
                            @Html.TextAreaFor(model => model.ContractResponse.VENDORNAME, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                        <div class="form-group col-md-6">
                            <label for="inputEmail4">Vendor Email</label>
                            @Html.TextAreaFor(model => model.ContractResponse.VENDOREMAIL, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="inputEmail4">Comment</label>
                            @Html.TextAreaFor(model => model.ContractResponse.VENDORCOMMENT, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                        <div class="form-group col-md-6">
                            <label for="inputEmail4">Response Status</label>
                            @Html.EditorFor(model => model.ContractResponse.RESPONSESTATUS, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <hr />

                    <div class="row">
                        @if (Model.ContractResponse.SUPPORTINGDOCUMENT1 != null)
                        {
                            <div class="form-group col-md-6">
                                @Html.ActionLink("View Supporting Document", "ViewSupportingDocument1", new { id = @Model.ContractResponse.ID }, new { @class = "viewsupp1" })
                            </div>
                        }
                        @if (Model.ContractResponse.SUPPORTINGDOCUMENT2 != null)
                        {
                            <div class="form-group col-md-6">
                                @Html.ActionLink("View Additional Supporting Document", "ViewSupportingDocument2", new { id = @Model.ContractResponse.ID }, new { @class = "viewsupp2" })
                            </div>
                        }

                    </div>

                    <hr />
                    <div class="form-row">
                        @if (Model.UdfResponse != null)
                        {
                            @foreach (var udf in Model.UdfResponse)
                            {
                                if (udf.RESPONSETYPE == "Text")
                                {
                                    <div class="form-group col-md-6">
                                        <label for="inputEmail4"> @udf.UDFLABEL</label>
                                        @Html.TextAreaFor(model => udf.TEXTVALUE, new { @class = "form-control", @readonly = "readonly" })
                                    </div>
                                }
                                else
                                {
                                    <div class="form-group col-md-6">
                                        @Html.ActionLink("View " + @udf.UDFLABEL, "ViewUDFSupportingDocument", new { id = udf.ID }, new { @class = "viewudf" })
                                    </div>
                                }
                            }
                        }

                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-4">
                            <label>Action</label>
                            @Html.DropDownListFor(model => model.AuthStatus, new List<SelectListItem> {
                       new SelectListItem{ Text="--Select--", Value="" },
                       new SelectListItem{ Text="Award", Value="Awarded" },
                       new SelectListItem{ Text="Reject", Value="Rejected"}
                       }, new { @class = "form-control", @id = "stat" })
                            <label id="errorMsgAction" style="color:red;display:none">*Authorization Action is required!.</label>
                        </div>
                        <div class="form-group col-md-8">
                            <label>Comment</label>
                            @Html.TextAreaFor(model => model.ContractResponse.AUTHORIZERCOMMENT, new { @class = "form-control", @id = "comment" })
                            <label id="errorMsg" style="color:red;display:none">*Comment is required for rejected request.</label>

                        </div>
                    </div>
                    <div class="tb-height-b15 tb-height-lg-b15"></div>
                    <button type="submit" class="btn btn-primary">Authorize</button>
                </div>
            </div>
        </div>

    </div>
</form>
    <div id="supp1Modal"></div>
    <div id="supp2Modal"></div>
    <div id="udfmodal"></div>
    @section Scripts
	{
        <script>
            $("a.viewsupp1").on('click', function () {
                $.ajax({
                    url: this.href,
                    type: 'Get',
                    cache: true,
                    success: function (result) {
                        $('#supp1Modal').html(result).find('.modal').modal({
                            show: true
                        });
                    }
                });
                return false;
            });
            $("a.viewsupp2").on('click', function () {
                $.ajax({
                    url: this.href,
                    type: 'Get',
                    cache: true,
                    success: function (result) {
                        $('#supp2Modal').html(result).find('.modal').modal({
                            show: true
                        });
                    }

                });
                return false;
            });
            $("a.viewudf").on('click', function () {
                $.ajax({
                    url: this.href,
                    type: 'Get',
                    cache: true,
                    success: function (result) {
                        $('#udfmodal').html(result).find('.modal').modal({
                            show: true
                        });
                    }
                });
                return false;
            });
        </script>
    }
